/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.8
 * Generated at: 2025-01-04 11:43:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.*;
import com.foodapp.model.*;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_packages.add("com.foodapp.model");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<meta charset=\"ISO-8859-1\">\r\n");
      out.write("	<title>Home</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css\">\r\n");
      out.write("	 <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css\">\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"./styles/home.css?v=1\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("    <nav class=\"navbar\">\r\n");
      out.write("        <div class=\"navbar-logo\">\r\n");
      out.write("            <a href=\"#\"><img src=\"./logo/fast-food.png\" alt=\"Foodie Hub\" class=\"logo\"></a>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"navbar-search\">\r\n");
      out.write("            <input type=\"text\" placeholder=\"Search restaurants...\" id=\"search-box\">\r\n");
      out.write("            <button class=\"search-btn\" id=\"search-button\">\r\n");
      out.write("                <i class=\"fas fa-search\"></i>\r\n");
      out.write("            </button>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"navbar-actions\">\r\n");
      out.write("            <button class=\"cart-btn\">\r\n");
      out.write("                <a href=\"CartServlet\"><i class=\"fas fa-shopping-cart\"></i></a>\r\n");
      out.write("            </button>\r\n");
      out.write("            <div class=\"profile-photo\" id=\"profile-photo\">\r\n");
      out.write("                <i class=\"fas fa-user\"></i>\r\n");
      out.write("            </div>\r\n");
      out.write("             <div class=\"profile-dropdown\" id=\"profile-dropdown\">\r\n");
      out.write("                <p id=\"username-display\">");
      out.print( ((User) session.getAttribute("user")).getUserName() );
      out.write("</p>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </nav>\r\n");
      out.write("    <h1 id=\"welcome\">Welcome\r\n");
      out.write("        ");
      out.print( ((User) session.getAttribute("user")).getUserName() );
      out.write("\r\n");
      out.write("    </h1>\r\n");
      out.write("    <div class=\"container\">\r\n");
      out.write("        <div class=\"restaurant-grid\" id=\"restaurant-grid\">\r\n");
      out.write("            ");

                ArrayList<Restaurant> restaurants = (ArrayList<Restaurant>) session.getAttribute("restaurants");
            	if(restaurants!=null){
                for (Restaurant res : restaurants) {
            
      out.write("\r\n");
      out.write("            <div class=\"restaurant-card\" data-name=\"");
      out.print( res.getName().toLowerCase() );
      out.write("\">\r\n");
      out.write("                <a href=\"MenuServlet?restaurantId=");
      out.print( res.getRestaurantId() );
      out.write("\" style=\"text-decoration:none\">\r\n");
      out.write("                    <img src=\"");
      out.print(res.getImagePath() );
      out.write("\" alt=\"Restaurant\" height=\"200px\" width=\"200px\">\r\n");
      out.write("                    <div class=\"restaurant-info\">\r\n");
      out.write("                        <div class=\"restaurant-header\">\r\n");
      out.write("                            <div class=\"restaurant-name\">");
      out.print( res.getName() );
      out.write("</div>\r\n");
      out.write("                            <div class=\"restaurant-rating\">&#9733; 4.5</div>\r\n");
      out.write("                        </div>\r\n");
      out.write("                        <div class=\"restaurant-details\">\r\n");
      out.write("                            <div>");
      out.print( res.getCuisineType() );
      out.write("</div>\r\n");
      out.write("                            <div>");
      out.print( res.getDeliveryTime() );
      out.write(" mins</div>\r\n");
      out.write("                            <div class=\"restaurant-availability available\">\r\n");
      out.write("                                ");
      out.print( res.isActive() ? "Active" : "Closed" );
      out.write("\r\n");
      out.write("                            </div>\r\n");
      out.write("                        </div>    \r\n");
      out.write("                    </div>\r\n");
      out.write("                </a>\r\n");
      out.write("            </div>\r\n");
      out.write("            ");

                }
            	}
            	else if (restaurants == null || restaurants.isEmpty()) {
            
      out.write("\r\n");
      out.write("                <div style=\"text-align: center; margin-top: 50px;\">\r\n");
      out.write("                    <h1>Temporarily, the menu is not available</h1>\r\n");
      out.write("                    <p>We apologize for the inconvenience. Please check back later.</p>\r\n");
      out.write("                </div>\r\n");
      out.write("            ");

                }
            
      out.write("\r\n");
      out.write("        </div>\r\n");
      out.write("        <div id=\"no-results\" style=\"text-align: center; display: none;\">No results found.</div>\r\n");
      out.write("    </div>\r\n");
      out.write("	\r\n");
      out.write("	<footer class=\"footer\">\r\n");
      out.write("        <div class=\"footer-content\">\r\n");
      out.write("            <div class=\"footer-column\">\r\n");
      out.write("                <h3>Company</h3>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">About us</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Team</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Careers</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Blog</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-column\">\r\n");
      out.write("                <h3>Contact</h3>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">Help & Support</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Partner with us</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Ride with us</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-column\">\r\n");
      out.write("                <h3>Legal</h3>\r\n");
      out.write("                <ul>\r\n");
      out.write("                    <li><a href=\"#\">Terms & Conditions</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Refund & Cancellation</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Privacy Policy</a></li>\r\n");
      out.write("                    <li><a href=\"#\">Cookie Policy</a></li>\r\n");
      out.write("                </ul>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class=\"footer-column\">\r\n");
      out.write("                <h3>Download App</h3>\r\n");
      out.write("                <div class=\"app-links\">\r\n");
      out.write("                    <a href=\"#\"><img src=\"./logo/play-store.png\" alt=\"Get it on Google Play\"></a>\r\n");
      out.write("                    <a href=\"#\"><img src=\"./logo/app-store.png\" alt=\"Download on the App Store\"></a>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div class=\"social-links\">\r\n");
      out.write("                    <a href=\"#\" aria-label=\"Facebook\"><i class=\"fab fa-facebook-f\"></i></a>\r\n");
      out.write("                    <a href=\"#\" aria-label=\"Twitter\"><i class=\"fab fa-twitter\"></i></a>\r\n");
      out.write("                    <a href=\"#\" aria-label=\"Instagram\"><i class=\"fab fa-instagram\"></i></a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("        <div class=\"footer-bottom\">\r\n");
      out.write("            &copy; 2024 Foodie Hub. All rights reserved.\r\n");
      out.write("        </div>\r\n");
      out.write("    </footer>\r\n");
      out.write("    \r\n");
      out.write("    <script>\r\n");
      out.write("    document.addEventListener(\"DOMContentLoaded\", () => {\r\n");
      out.write("    	 const searchBox = document.getElementById(\"search-box\");\r\n");
      out.write("         const restaurantCards = document.querySelectorAll(\".restaurant-card\");\r\n");
      out.write("         const noResults = document.getElementById(\"no-results\");\r\n");
      out.write("         const profilePhoto = document.getElementById(\"profile-photo\");\r\n");
      out.write("         const profileDropdown = document.getElementById(\"profile-dropdown\");\r\n");
      out.write("\r\n");
      out.write("         // Show username on profile icon click\r\n");
      out.write("         profilePhoto.addEventListener(\"click\", () => {\r\n");
      out.write("             const isVisible = profileDropdown.style.display === \"block\";\r\n");
      out.write("             profileDropdown.style.display = isVisible ? \"none\" : \"block\";\r\n");
      out.write("         });\r\n");
      out.write("         \r\n");
      out.write("         \r\n");
      out.write("        searchBox.addEventListener(\"input\", () => {\r\n");
      out.write("            const query = searchBox.value.toLowerCase().trim();\r\n");
      out.write("            let matches = 0;\r\n");
      out.write("\r\n");
      out.write("            restaurantCards.forEach(card => {\r\n");
      out.write("                const name = card.getAttribute(\"data-name\");\r\n");
      out.write("                if (name.includes(query)) {\r\n");
      out.write("                    card.style.display = \"block\"; // Show matching items\r\n");
      out.write("                    matches++;\r\n");
      out.write("                } else {\r\n");
      out.write("                    card.style.display = \"none\"; // Hide non-matching items\r\n");
      out.write("                }\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            // Show or hide the \"No Results Found\" message\r\n");
      out.write("            noResults.style.display = matches ? \"none\" : \"block\";\r\n");
      out.write("        });\r\n");
      out.write("    });\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
